<wpf:ResourceDictionary xml:space="preserve" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:ss="urn:shemas-jetbrains-com:settings-storage-xaml" xmlns:wpf="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
	<s:String x:Key="/Default/CodeEditing/Unity/AdditionalFileLayout/Pattern/@EntryValue">&lt;Patterns xmlns="urn:schemas-jetbrains-com:member-reordering-patterns"
          xmlns:unity="urn:schemas-jetbrains-com:member-reordering-patterns-unity"&gt;

    &lt;!-- Pattern to match classes used by Unity that contain serialised fields and event
         function methods. Based on the standard "Default Pattern", this will also order
         event functions before normal methods, and does not reorder serialised fields,
         as this order is reflected in the Unity editor's Inspector --&gt;
    &lt;TypePattern DisplayName="Unity classes" Priority="100" RemoveRegions="AllExceptGenerated"&gt;
        &lt;TypePattern.Match&gt;
            &lt;unity:SerializableClass /&gt;
        &lt;/TypePattern.Match&gt;

        &lt;Entry DisplayName="Properties" Priority="100"&gt;
            &lt;Entry.Match&gt;
                &lt;Or&gt;
                    &lt;Kind Is="Property" /&gt;
                    &lt;Kind Is="Indexer" /&gt;
                    &lt;Kind Is="Autoproperty"/&gt;
                &lt;/Or&gt;
            &lt;/Entry.Match&gt;
            &lt;Entry.SortBy&gt;
                &lt;Access Order="public protected internal private"/&gt;
            &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;

        &lt;Entry DisplayName="Serialized Fields"&gt;
            &lt;Entry.Match&gt;
                &lt;unity:SerializedField /&gt;
            &lt;/Entry.Match&gt;
            &lt;!-- No sorting --&gt;
        &lt;/Entry&gt;


        &lt;!-- Fields/Members variables --&gt;
        &lt;Entry DisplayName="Fields/Members variables"&gt;
            &lt;Entry.Match&gt;
                &lt;And&gt;
                    &lt;Kind Is="Field" /&gt;
                    &lt;Not&gt;
                        &lt;unity:SerializedField /&gt;
                    &lt;/Not&gt;
                &lt;/And&gt;
            &lt;/Entry.Match&gt;
            &lt;Entry.SortBy&gt;
                &lt;Access Order="public protected private"/&gt;
            &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;

        &lt;!-- Events &amp; Delegates --&gt;
        &lt;Entry DisplayName="Events And Delegates"&gt;
            &lt;Entry.Match&gt;
                &lt;Or&gt;
                    &lt;Kind Is="Event" /&gt;
                    &lt;Kind Is="Delegate" /&gt;
                &lt;/Or&gt;
            &lt;/Entry.Match&gt;
        &lt;/Entry&gt;

        &lt;!-- Unity Methods --&gt;
        &lt;Entry DisplayName="Event Functions"&gt;
            &lt;Entry.Match&gt;
                &lt;unity:EventFunction /&gt;
            &lt;/Entry.Match&gt;

            &lt;Entry.SortBy&gt;
                &lt;!-- Prioritises common event functions. For alphabetical, replace with &lt;Name /&gt; --&gt;
                &lt;unity:EventFunctionName /&gt;
            &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;

        &lt;Entry&gt;
            &lt;Entry.Match&gt;
                &lt;Kind Is="Constructor"/&gt;
            &lt;/Entry.Match&gt;
        &lt;/Entry&gt;

        &lt;!-- All other methods (public, protected, private) --&gt;
        &lt;Entry DisplayName="All other methods"&gt;
            &lt;Entry.Match&gt;
                &lt;And&gt;
                    &lt;Kind Is="Method" /&gt;
                    &lt;Not&gt;
                        &lt;unity:EventFunction /&gt;
                    &lt;/Not&gt;
                &lt;/And&gt;
            &lt;/Entry.Match&gt;
            &lt;Entry.SortBy&gt;
                &lt;Access Order="public protected private"/&gt;
            &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
    &lt;/TypePattern&gt;
&lt;/Patterns&gt;</s:String>
	<s:String x:Key="/Default/CodeInspection/Highlighting/InspectionSeverities/=Unity_002EPreferNonAllocApi/@EntryIndexedValue">DO_NOT_SHOW</s:String>
	<s:Boolean x:Key="/Default/CodeInspection/Roslyn/LegacySeveritiesMigrated/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpCodeStyle/BRACES_FOR_FOR/@EntryValue">Required</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpCodeStyle/BRACES_FOR_FOREACH/@EntryValue">Required</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpCodeStyle/BRACES_FOR_IFELSE/@EntryValue">Required</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpCodeStyle/BRACES_FOR_WHILE/@EntryValue">Required</s:String>
	<s:String x:Key="/Default/CodeStyle/FileHeader/FileHeaderText/@EntryValue">Copyrighted by team Rézoskour 
Created by $USER_NAME$ on $CREATED_DAY$</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/Naming/CSharpAutoNaming/IsNotificationDisabled/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/Naming/CSharpNaming/ApplyAutoDetectedRules/@EntryValue">False</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=Constants/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="AA_BB" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=Parameters/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="_" Suffix="" Style="aaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=PrivateConstants/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="AA_BB" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=PrivateInstanceFields/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="aaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=PrivateStaticFields/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="aaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=PublicFields/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="AaBb"&gt;&lt;ExtraRule Prefix="_" Suffix="" Style="aaBb" /&gt;&lt;/Policy&gt;</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=2CAB0A567F30704CA99AA3EC249E3153/Text/@EntryValue">#nullable enable

$HEADER$namespace $NAMESPACE$
{
  public class $CLASS$ {$END$}
}</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=38ACF55F0772564291AEB5436552DB13/Text/@EntryValue">$HEADER$
#nullable enable

namespace $NAMESPACE$ {
  public class $CLASS$ : UnityEngine.MonoBehaviour {$END$}
}</s:String>
	<s:Int64 x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=38ACF55F0772564291AEB5436552DB13/Field/=CLASS/Order/@EntryValue">0</s:Int64>
	<s:Int64 x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=38ACF55F0772564291AEB5436552DB13/Field/=HEADER/Order/@EntryValue">2</s:Int64>
	<s:Int64 x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=38ACF55F0772564291AEB5436552DB13/Field/=NAMESPACE/Order/@EntryValue">1</s:Int64></wpf:ResourceDictionary>